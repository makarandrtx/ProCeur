// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProCeur.API.Shared;

#nullable disable

namespace ProCeur.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProCeur.API.Database.EntityModels.Admin.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LastModifiedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Departments", "Admin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedById = new Guid("b352141f-3603-44d5-b136-a39c9f9ee2e0"),
                            CreatedDate = new DateTime(2025, 7, 1, 19, 26, 13, 145, DateTimeKind.Unspecified).AddTicks(5952),
                            DepartmentName = "Cassiolli",
                            IsActive = true,
                            IsDefault = true,
                            LastModifiedById = new Guid("b352141f-3603-44d5-b136-a39c9f9ee2e0"),
                            LastModifiedDate = new DateTime(2025, 7, 1, 19, 26, 13, 145, DateTimeKind.Unspecified).AddTicks(5952)
                        },
                        new
                        {
                            Id = 2,
                            CreatedById = new Guid("b352141f-3603-44d5-b136-a39c9f9ee2e0"),
                            CreatedDate = new DateTime(2025, 7, 1, 19, 26, 13, 145, DateTimeKind.Unspecified).AddTicks(5952),
                            DepartmentName = "Coppershop",
                            IsActive = true,
                            IsDefault = true,
                            LastModifiedById = new Guid("b352141f-3603-44d5-b136-a39c9f9ee2e0"),
                            LastModifiedDate = new DateTime(2025, 7, 1, 19, 26, 13, 145, DateTimeKind.Unspecified).AddTicks(5952)
                        },
                        new
                        {
                            Id = 3,
                            CreatedById = new Guid("b352141f-3603-44d5-b136-a39c9f9ee2e0"),
                            CreatedDate = new DateTime(2025, 7, 1, 19, 26, 13, 145, DateTimeKind.Unspecified).AddTicks(5952),
                            DepartmentName = "FAT",
                            IsActive = true,
                            IsDefault = true,
                            LastModifiedById = new Guid("b352141f-3603-44d5-b136-a39c9f9ee2e0"),
                            LastModifiedDate = new DateTime(2025, 7, 1, 19, 26, 13, 145, DateTimeKind.Unspecified).AddTicks(5952)
                        },
                        new
                        {
                            Id = 4,
                            CreatedById = new Guid("b352141f-3603-44d5-b136-a39c9f9ee2e0"),
                            CreatedDate = new DateTime(2025, 7, 1, 19, 26, 13, 145, DateTimeKind.Unspecified).AddTicks(5952),
                            DepartmentName = "Stores",
                            IsActive = true,
                            IsDefault = true,
                            LastModifiedById = new Guid("b352141f-3603-44d5-b136-a39c9f9ee2e0"),
                            LastModifiedDate = new DateTime(2025, 7, 1, 19, 26, 13, 145, DateTimeKind.Unspecified).AddTicks(5952)
                        });
                });

            modelBuilder.Entity("ProCeur.API.Database.EntityModels.Admin.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("LastModifiedById")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles", "Admin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedById = new Guid("b352141f-3603-44d5-b136-a39c9f9ee2e0"),
                            CreatedDate = new DateTime(2025, 7, 1, 19, 26, 13, 145, DateTimeKind.Unspecified).AddTicks(5952),
                            IsActive = false,
                            IsDefault = true,
                            LastModifiedById = new Guid("b352141f-3603-44d5-b136-a39c9f9ee2e0"),
                            LastModifiedDate = new DateTime(2025, 7, 1, 19, 26, 13, 145, DateTimeKind.Unspecified).AddTicks(5952),
                            Name = "Superadmin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedById = new Guid("b352141f-3603-44d5-b136-a39c9f9ee2e0"),
                            CreatedDate = new DateTime(2025, 7, 1, 19, 26, 13, 145, DateTimeKind.Unspecified).AddTicks(5952),
                            IsActive = false,
                            IsDefault = true,
                            LastModifiedById = new Guid("b352141f-3603-44d5-b136-a39c9f9ee2e0"),
                            LastModifiedDate = new DateTime(2025, 7, 1, 19, 26, 13, 145, DateTimeKind.Unspecified).AddTicks(5952),
                            Name = "User"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
